apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
    maven {
        url "http://twitter4j.org/maven2"
    }
    maven {
        url "https://dl.bintray.com/shibafu528/maven"
    }
}

class GitUtil {
    static def getRevHash() {
        def proc = ["git", "rev-parse", "HEAD"].execute()
        proc.waitFor()
        return proc.inputStream.readLines().first()
    }

    static def getRevCount() {
        def proc = ["git", "rev-list", "--count", "HEAD"].execute()
        proc.waitFor()
        return proc.inputStream.readLines().first()
    }

    static def isDirty() {
        def proc = ["git", "status", "--porcelain"].execute()
        proc.waitFor()
        return proc.inputStream.readLines().size() > 0
    }
}

ext {
    supportLibVersion = '28.0.0'
    playServicesVersion = '11.4.0'
    twitter4jVersion = '4.0.7'
    mastodon4jVersion = '1.6.0'
    leakCanaryVersion = '1.5.4'
    exvoiceVersion = '20200915.230759'

    y4aVersionMajor = 3
    y4aVersionMinor = 0
    y4aVersionPatch = 5
    y4aVersionSuffix = ''
    y4aCodeName = 'linkage'

    y4aRevision = GitUtil.revHash.substring(0, 7)
    if (GitUtil.isDirty()) {
        y4aRevision += "*"
    }
    y4aBuildDate = new Date().format("yyMMdd")
    y4aVersionString = [y4aVersionMajor, y4aVersionMinor, y4aVersionPatch, GitUtil.revCount].join(".") + y4aVersionSuffix
    y4aVersionCode = y4aVersionMajor * 1000000 + y4aVersionMinor * 1000 + y4aVersionPatch
    y4aVersionName = "${y4aVersionString} (${y4aCodeName} ${y4aBuildDate} ${y4aRevision})"
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "shibafu.yukari"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode y4aVersionCode
        versionName y4aVersionName

        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Android Gradle Plugin v0.7.0でビルドが通らない問題の回避
    // http://stackoverflow.com/questions/20673888/duplicate-files-copied-android-studio-0-4-0
    packagingOptions {
        exclude 'LICENSE-EDL-1.0.txt'
        exclude 'LICENSE-EPL-1.0.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignore 'MissingTranslation'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    signingConfigs {
        def releaseStoreFile = System.getenv('SIGNING_STORE_FILE')
        if (releaseStoreFile != null && releaseStoreFile != '' && file(releaseStoreFile).exists()) {
            println "[SigningConfigs] Use keystore file for release build: ${releaseStoreFile}"

            release {
                storeFile file(releaseStoreFile)
                storePassword System.getenv('SIGNING_STORE_PASSWORD')
                keyAlias System.getenv('SIGNING_KEY_ALIAS')
                keyPassword System.getenv('SIGNING_KEY_PASSWORD')
            }
        } else {
            println "[SigningConfigs] SIGNING_STORE_FILE is not defined."
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            if (signingConfigs.hasProperty('release')) {
                signingConfig signingConfigs.release
            }
        }
    }
    flavorDimensions "stage"
    productFlavors {
        stable {
            dimension "stage"
        }
        alpha {
            dimension "stage"
            applicationIdSuffix ".alpha"
        }
    }
    applicationVariants.all { variant ->
        variant.resValue "string", "applicationId", variant.applicationId
    }
    kotlinOptions {
        apiVersion = '1.3'
    }
}

dependencies {
    // Support Library
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:palette-v7:$supportLibVersion"
    implementation "com.android.support:support-v4:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:exifinterface:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    compile "com.android.support:multidex:1.0.2"

    // Play Services
    implementation "com.google.android.gms:play-services-base:${playServicesVersion}"

    // UI互換
    implementation 'com.github.machinarius:preferencefragment:0.1.1'

    // UI追加
    implementation 'com.larswerkman:HoloColorPicker:1.4'
    implementation 'com.code-troopers.betterpickers:library:3.1.0'
    implementation project(':GalleryMultiPicker:library')

    // Twitter4J
    implementation "org.twitter4j:twitter4j-core:${twitter4jVersion}"
    implementation "org.twitter4j:twitter4j-stream:${twitter4jVersion}"
    implementation "org.twitter4j:twitter4j-http2-support:${twitter4jVersion}"
//    implementation "com.github.takke.twitter4j:twitter4j-core:2612db7f15"
//    implementation "com.github.takke.twitter4j:twitter4j-stream:2612db7f15"
//    implementation "com.github.takke.twitter4j:twitter4j-http2-support:2612db7f15"

    // Mastodon
//    implementation "com.github.sys1yagi.mastodon4j:mastodon4j:${mastodon4jVersion}"
    implementation "com.github.shibafu528.mastodon4j:mastodon4j:43b77f366515641a4569c2cfffef57301259c5a0"

    // パーサ
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation 'org.jsoup:jsoup:1.8.3'
    implementation 'com.google.zxing:javase:3.2.1', {
        exclude group: 'com.beust', module: 'jcommander'
    }
    implementation 'com.twitter:twitter-text:1.13.0'
    implementation project(':twpfparser')

    // 通信
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'

    // プラグインシステム
    if (getProperty("yukari.exvoice.build").toBoolean()) {
        implementation project(':yukari-exvoice')
    } else {
        implementation "info.shibafu528.yukari:yukari-exvoice:$exvoiceVersion"
    }

    // Annotation Processor
    implementation 'com.jakewharton:butterknife:8.8.0'
    kapt 'com.jakewharton:butterknife-compiler:8.8.0'
    implementation "com.github.hotchemi:permissionsdispatcher:3.3.1", {
        exclude group: 'com.android.support', module: 'support-v13'
    }
    kapt "com.github.hotchemi:permissionsdispatcher-processor:3.3.1"
    implementation project(':yukari-processor-runtime')
    kapt project(':yukari-processor')

    // デバッグ用
    debugImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // Deploygate SDK
    alphaImplementation 'com.deploygate:sdk:4.1.0'

    // いろいろ
    implementation 'com.annimon:stream:1.0.8'
    implementation 'com.google.guava:guava:22.0-android'
    implementation 'org.eclipse.collections:eclipse-collections-api:7.1.0'
    implementation 'org.eclipse.collections:eclipse-collections:7.1.0'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.0'
    implementation fileTree(dir: './libs', includes: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Test
    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.mockito:mockito-core:2.21.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"
    testImplementation "org.robolectric:robolectric:4.3"
}

// Kotlin
buildscript {
    ext.kotlin_version = '1.3.10'
    ext.kotlin_coroutines_version = '1.0.1'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

task showVersion {
    println "VersionCode: " + y4aVersionCode
    println "VersionName: " + y4aVersionName
}